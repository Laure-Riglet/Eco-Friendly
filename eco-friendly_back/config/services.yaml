# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    assets_avatar_url: '%env(string:BASE_URL)%/assets/img/avatars/'
    uploads_article_url: '%env(string:BASE_URL)%/uploads/articles/'
    uploads_user_url: '%env(string:BASE_URL)%/uploads/users/'
    assets_avatar_directory: '%kernel.project_dir%/public/assets/img/avatars/'
    uploads_article_directory: '%kernel.project_dir%/public/uploads/articles/'
    uploads_user_directory: '%kernel.project_dir%/public/uploads/users/'
    admin_email: '%env(string:ADMIN_EMAIL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
# this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Normalizer\EntityDenormalizer:
        public: false
        autowire: true
        autoconfigure: true
        tags: [serializer.normalizer]
# prettier-ignore
    App\EventListener\AdviceListener:
        tags:
            - # these are the options required to define the entity listener
                name: doctrine.orm.event_listener
                event: PostPersist
                entity: App\Entity\Advice
                method: SetSlug
            - # these are the options required to define the entity listener
                name: doctrine.orm.event_listener
                event: PostUpdate
                entity: App\Entity\Advice
                method: SetSlug
    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }